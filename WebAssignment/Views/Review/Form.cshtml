@model WebAssignment.ViewModels.ReviewFormViewModel
@using WebAssignment.Models
@{
    if (User.IsInRole(RoleName.Administrator))
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutUser.cshtml";
    }
    bool exists;
    if (Model == null || Model.Id == 0)
    {
        ViewBag.Title = "New Review";
        exists = false;
    }
    else
    {
        ViewBag.Title = "Edit Review";
        exists = true;

    }
    string heading = (exists == false) ? "New Review" : "Edit Review";

}
<h2>@heading</h2>
@using (Html.BeginForm("Save", "Review"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Comment, new { @class = "required" })
        @Html.TextAreaFor(m => m.Comment, new { @class = "form-control" , @rows = 10})
        @Html.ValidationMessageFor(m => m.Comment)
    </div>
    <div class="form-group">
        <label class="required"> Rating (1-5)</label>
        <input id="Rating" type="number" min="1" max="5" class="form-control" name="Rating" value=@(exists?Model.Rating:1)>
        @*@Html.TextBoxFor(m => m.Rating, new { @class = "form-control" })*@
        @Html.ValidationMessageFor(m => m.Rating)
    </div>
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-primary">Save</button>

    if (@exists)
    {
        @Html.HiddenFor(m => m.Id)
        <input type="button" class="btn btn-danger" value="Delete review" onclick="location.href='@Url.Action("Remove", "Review", new { id = Model.Id })'" />
    }


}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
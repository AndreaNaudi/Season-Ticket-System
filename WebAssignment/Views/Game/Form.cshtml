@model WebAssignment.ViewModels.GameFormViewModel
@using WebAssignment.Models
@{

    if (User.IsInRole(RoleName.Administrator))
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutUser.cshtml";
    }
    bool exists;
    string valid = Request.Params["valid"];
    string error = (valid == "0") ? "Game cannot be deleted since a ticket has already been sold." : null;
    if (Model == null || Model.Id == 0)
    {
        ViewBag.Title = "New Game";
        exists = false;
    }
    else
    {
        ViewBag.Title = "Edit Game";
        exists = true;
    }
    string heading = (exists == false) ? "New Game" : "Edit Game";
}
<h2>@heading</h2>
@using (Html.BeginForm("Save", "Game"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.HomeTeam, new { @class = "required" })
        @Html.TextBoxFor(m => m.HomeTeam, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.HomeTeam)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AwayTeam, new { @class = "required" })
        @Html.TextBoxFor(m => m.AwayTeam, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.AwayTeam)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CompetitionId, new { @class = "required" })
        @Html.DropDownListFor(m => m.CompetitionId, new SelectList(Model.Competitions, "Id", "Name"), "Select Competition", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CompetitionId)
    </div>
       

    @*<div class="form-group">
        @Html.LabelFor(m => m.Game.Date, new { @class = "required" })
        @Html.EditorFor(m => m.Game.Date, new { htmlAttributes = new{ @class = "form-control"  } })
        @Html.ValidationMessageFor(m => m.Game.Date)
    </div>*@
    
    <div class="form-group">
        @Html.LabelFor(m => m.Date, new { @class = "required" })
        <div class='input-group date' id='Game_Date' style="width:280px">
            @Html.TextBoxFor(m => m.Date, "{0:dd/MM/yyyy HH:mm}", new { @class = "form-control" })
            <span class="input-group-addon" style="width:0">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
        @Html.ValidationMessageFor(m => m.Date)
    </div>

    <div class="form-group" style="width:280px">
        <label>Assign Tickets</label>
        <br>
        <select id="ticketSelect" data-live-search="true" class="selectpicker form-control" multiple name="SelectedTickets" data-actions-box="true" data-selected-text-format="count > 0">
            @foreach (@SelectListGroup grp in Model.Groups)
            {
                
                var grpname = grp.Name;

                <optgroup label="@grpname">
                    @foreach (@SelectListItem item in Model.Tickets)
                    {
                        if (item.Group.Name == grp.Name)
                        {
                            var sel = false;
                            if (Model.SelectedTickets != null)
                            {
                                foreach (string s in Model.SelectedTickets)
                                {
                                    if (item.Text == s)
                                    {
                                        sel = true;
                                    }
                                }
                            }

                            <option selected=@sel value=@item.Value>@item.Text</option>
                        }

                    }
                </optgroup>
            }

        </select>
    </div>


    @Html.AntiForgeryToken()
    
    <button type="submit" class="btn btn-primary">Save</button>

    if (@exists)
    {
        @Html.HiddenFor(m => m.Id)
        <input type="button" class="btn btn-danger" value="Delete Game" onclick="location.href='@Url.Action("Remove", "Game", new { id = Model.Id })'" />
        <div class="field-validation-error">@error</div>
    }


}

@section Styles{
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.6.3/css/bootstrap-select.min.css" />
}

@section Scripts{

    @*multiselect*@
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>*@
    <script src="//cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.6.3/js/bootstrap-select.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    

    <script type="text/javascript">
       
        $(function () {
            $('#Game_Date').datetimepicker({
                format: "DD/MM/YYYY HH:mm",
                showClose: true,
                showClear: true,
                useCurrent: true,
                showTodayButton: true,
                minDate: moment().subtract(7, 'days').millisecond(0).second(0).minute(0).hour(0),
                toolbarPlacement: 'top',
            }).on('dp.change', function (e) {
                //$(this).data('DateTimePicker').hide();
            })

        });

        $(function () {
            try {
                $.validator.addMethod('date',
                    function (value, element) {
                        if (this.optional(element)) {
                            return true;
                        }
                        var ok = true;
                        try {
                            ok = moment(value, "DD/MM/YYYY HH:mm", true).isValid();
                        } catch (err) {
                            ok = false;
                        }
                        return ok;
                    });
            } catch (e) { }
        });
</script>
}
